# Don't process anything unless it has a Host header field
server {
    listen 80;
    listen [::]:80;

    return 444;
}

server {
    listen 443;
    listen [::]:443;
    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/key.pem;

    return 444;
}

# Redirect anything coming into other domains that we should feasibly deal with. Always redirect to secure (https)
server {
    listen 80;
    listen [::]:80;
    server_name compsoc.io www.compsoc.io compsoc.tech www.compsoc.tech;

    rewrite ^ https://www.compsoc.tech$request_uri permanent;
}

server {
    listen 443;
    listen [::]:443;
    server_name compsoc.io www.compsoc.io compsoc.tech;

    rewrite ^ https://www.compsoc.tech$request_uri permanent;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    #ssl_stapling on;
    #ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    server_name localhost;

    location /media {
      autoindex on;
      alias /media/;
    }

    location /static {
          autoindex on;
          alias /static/;
    }

    location / {
          proxy_pass http://django:8000;
    }
}
